#pragma once

const char index_html[] PROGMEM = R"rawliteral(
    <!DOCTYPE HTML><html>
    <head>
      <title>ESP Web Server</title>
      <meta name="viewport" content="width=device-width, initial-scale=1">
      <link rel="icon" href="data:,">
      <style>
      html {
        font-family: Arial, Helvetica, sans-serif;
        text-align: center;
      }
      h1 {
        font-size: 1.8rem;
        color: white;
      }
      h2{
        font-size: 1.5rem;
        font-weight: bold;
        color: #143642;
      }
      .topnav {
        overflow: hidden;
        background-color: #143642;
      }
      body {
        margin: 0;
      }
      .content {
        padding: 30px;
        max-width: 600px;
        margin: 0 auto;
      }
      .card {
        background-color: #F8F7F9;;
        box-shadow: 2px 2px 12px 1px rgba(140,140,140,.5);
        padding-top:10px;
        padding-bottom:20px;
      }
      .button {
        padding: 15px 50px;
        font-size: 24px;
        text-align: center;
        outline: none;
        color: #fff;
        background-color: #0f8b8d;
        border: none;
        border-radius: 5px;
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        -webkit-tap-highlight-color: rgba(0,0,0,0);
      }
      /*.button:hover {background-color: #0f8b8d}*/
      .button:active {
        background-color: #0f8b8d;
        box-shadow: 2 2px #CDCDCD;
        transform: translateY(2px);
      }
      .state {
        font-size: 1.5rem;
        color:#8c8c8c;
        font-weight: bold;
      }
      </style>
    <title>ESP Web Server</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="data:,">
    </head>
    <body>
      <div class="topnav">
        <h1>ESP WebSocket Server</h1>
      </div>
      <div class="content">
        <div class="card">
          <h2>Output - GPIO 2</h2>
          <p class="state">state: <span id="state">%STATE%</span></p>
          <p><button id="button" class="button">Toggle</button></p>
        </div>
      </div>
    <script>
      var gateway = `ws://${window.location.hostname}/ws`;
      var websocket;
      window.addEventListener('load', onLoad);
      function initWebSocket() {
        console.log('Trying to open a WebSocket connection...');
        websocket = new WebSocket(gateway);
        websocket.onopen    = onOpen;
        websocket.onclose   = onClose;
        websocket.onmessage = onMessage; // <-- add this line
      }
      function onOpen(event) {
        console.log('Connection opened');
      }
      function onClose(event) {
        console.log('Connection closed');
        setTimeout(initWebSocket, 2000);
      }
      function onMessage(event) {
        var state;
        if (event.data == "1"){
          state = "ON";
        }
        else{
          state = "OFF";
        }
        document.getElementById('state').innerHTML = state;
      }
      function onLoad(event) {
        initWebSocket();
        initButton();
      }
      function initButton() {
        document.getElementById('button').addEventListener('click', toggle);
      }
      function toggle(){
        websocket.send('toggle');
      }
    </script>
    </body>
    </html>
    )rawliteral";

// 'tcpconn1', 50x50px
const unsigned char tcpConn1 [] PROGMEM = {
    0xff, 0xc0, 0x00, 0x00, 0x00, 0xff, 0xc0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0xf8, 0x00,
    0x00, 0x00, 0x00, 0x07, 0xc0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0xe0, 0x7f, 0xff, 0xff,
    0xff, 0x81, 0xc0, 0xc1, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xc0, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xf0,
    0xc0, 0x87, 0xf8, 0x00, 0x00, 0x07, 0xf8, 0x40, 0x87, 0xf0, 0x00, 0x00, 0x01, 0xf8, 0x40, 0x87,
    0xf0, 0x00, 0x00, 0x01, 0xf8, 0x40, 0x8f, 0xe0, 0x00, 0x00, 0x01, 0xfc, 0x40, 0x8f, 0xe0, 0x00,
    0x00, 0x01, 0xfc, 0x40, 0x8f, 0xe3, 0x36, 0xcd, 0xb9, 0xfc, 0x40, 0x8f, 0xe3, 0x36, 0xcd, 0xb9,
    0xfc, 0x40, 0x8f, 0xe3, 0x36, 0xcd, 0xb9, 0xfc, 0x40, 0x8f, 0xe3, 0x36, 0xcd, 0xb9, 0xfc, 0x40,
    0x8f, 0xe3, 0x36, 0xcd, 0xb9, 0xfc, 0x40, 0x8f, 0xe3, 0x26, 0x4d, 0x99, 0xfc, 0x40, 0x8f, 0xe0,
    0x00, 0x00, 0x01, 0xfc, 0x40, 0x8f, 0xe0, 0x00, 0x00, 0x01, 0xfc, 0x40, 0x8f, 0xe0, 0x00, 0x00,
    0x01, 0xfc, 0x40, 0x8f, 0xe0, 0x00, 0x00, 0x01, 0xfc, 0x40, 0x8f, 0xe0, 0x00, 0x00, 0x01, 0xfc,
    0x40, 0x8f, 0xe0, 0x00, 0x00, 0x01, 0xfc, 0x40, 0x8f, 0xe0, 0x00, 0x00, 0x01, 0xfc, 0x40, 0x8f,
    0xe0, 0x00, 0x00, 0x01, 0xfc, 0x40, 0x8f, 0xe0, 0x00, 0x00, 0x01, 0xfc, 0x40, 0x8f, 0xe0, 0x00,
    0x00, 0x01, 0xfc, 0x40, 0x8f, 0xe0, 0x00, 0x00, 0x01, 0xfc, 0x40, 0x8f, 0xe0, 0x00, 0x00, 0x01,
    0xfc, 0x40, 0x8f, 0xe0, 0x00, 0x00, 0x01, 0xfc, 0x40, 0x8f, 0xff, 0x00, 0x00, 0x3f, 0xfc, 0x40,
    0x8f, 0xff, 0x00, 0x00, 0x3f, 0xfc, 0x40, 0x8f, 0xff, 0x00, 0x00, 0x3f, 0xfc, 0x40, 0x8f, 0xff,
    0x00, 0x00, 0x3f, 0xfc, 0x40, 0x8f, 0xff, 0x00, 0x00, 0x3f, 0xfc, 0x40, 0x8f, 0xff, 0xc0, 0x00,
    0xff, 0xfc, 0x40, 0x8f, 0xff, 0xe0, 0x00, 0xff, 0xfc, 0x40, 0x8f, 0xff, 0xe0, 0x00, 0xff, 0xfc,
    0x40, 0x8f, 0xff, 0xe0, 0x00, 0xff, 0xfc, 0x40, 0x87, 0xff, 0xe0, 0x00, 0xff, 0xf8, 0x40, 0x87,
    0xff, 0xff, 0xff, 0xff, 0xf8, 0x40, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xc0, 0xc3, 0xff, 0xff,
    0xff, 0xff, 0xf0, 0xc0, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xc0, 0xe0, 0x7f, 0xff, 0xff, 0xff,
    0x81, 0xc0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0,
    0xfe, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0
  };
  
  
  // 'AntennaSending', 50x50px
  const unsigned char antennaSending1 [] PROGMEM = {
    0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xc0, 0x00, 0xff, 0xff, 0xc0, 0xff, 0xfe,
    0x00, 0x00, 0x3f, 0xff, 0xc0, 0xff, 0xf8, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0xff, 0xe0, 0x1f, 0xfe,
    0x03, 0xff, 0xc0, 0xff, 0xc0, 0xff, 0xff, 0x81, 0xff, 0xc0, 0xff, 0x83, 0xfc, 0x0f, 0xe0, 0x7f,
    0xc0, 0xff, 0x0f, 0xc0, 0x01, 0xf8, 0x3f, 0xc0, 0xfe, 0x1f, 0x00, 0x00, 0x7c, 0x1f, 0xc0, 0xfc,
    0x3c, 0x01, 0xc0, 0x1e, 0x1f, 0xc0, 0xf8, 0x78, 0x1f, 0xfc, 0x0f, 0x0f, 0xc0, 0xf0, 0xf0, 0x7f,
    0xff, 0x07, 0x87, 0xc0, 0xf1, 0xe1, 0xfc, 0x1f, 0xc3, 0xc7, 0xc0, 0xe1, 0xc3, 0xe0, 0x03, 0xe1,
    0xc3, 0xc0, 0xe3, 0x87, 0xc0, 0x00, 0xf0, 0xe3, 0xc0, 0xc3, 0x87, 0x81, 0xc0, 0x78, 0xe1, 0xc0,
    0xc7, 0x0f, 0x0f, 0xf8, 0x38, 0x71, 0xc0, 0xc7, 0x1e, 0x1f, 0xfc, 0x1c, 0x70, 0xc0, 0x87, 0x1c,
    0x3f, 0xfe, 0x1c, 0x38, 0xc0, 0x8e, 0x1c, 0x7f, 0xff, 0x0e, 0x38, 0xc0, 0x8e, 0x38, 0x7c, 0x1f,
    0x8e, 0x38, 0xc0, 0x8e, 0x38, 0xf8, 0x0f, 0x8e, 0x38, 0xc0, 0x8e, 0x38, 0xf8, 0x07, 0x8e, 0x18,
    0x40, 0x8e, 0x38, 0xf8, 0x07, 0x8e, 0x18, 0x40, 0x8e, 0x38, 0xf8, 0x07, 0x8e, 0x18, 0x40, 0x8e,
    0x38, 0xf8, 0x0f, 0x8e, 0x18, 0x40, 0x8e, 0x38, 0xfc, 0x0f, 0x8e, 0x38, 0x40, 0x8e, 0x38, 0x7e,
    0x3f, 0x8e, 0x38, 0xc0, 0x8e, 0x3c, 0x7e, 0x3f, 0x0e, 0x38, 0xc0, 0x8e, 0x1c, 0x3e, 0x3e, 0x1c,
    0x38, 0xc0, 0x87, 0x1e, 0x1e, 0x3e, 0x3c, 0x70, 0xc0, 0xc7, 0x0f, 0x1e, 0x3f, 0x38, 0x71, 0xc0,
    0xc7, 0x8f, 0xfe, 0x3f, 0xf8, 0xf1, 0xc0, 0xc3, 0x87, 0xfe, 0x3f, 0xf0, 0xe1, 0xc0, 0xe3, 0xc3,
    0xfe, 0x3f, 0xf1, 0xe3, 0xc0, 0xe1, 0xe1, 0xfe, 0x3f, 0xfb, 0xc3, 0xc0, 0xf0, 0xf3, 0xfe, 0x3f,
    0xff, 0x87, 0xc0, 0xf8, 0x7f, 0xfe, 0x3f, 0xff, 0x87, 0xc0, 0xf8, 0x7f, 0xfe, 0x3f, 0xff, 0x0f,
    0xc0, 0xfc, 0x3f, 0xfe, 0x3f, 0xff, 0xdf, 0xc0, 0xfe, 0x3f, 0xfe, 0x3f, 0xff, 0xff, 0xc0, 0xff,
    0xff, 0xfe, 0x3f, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xfe,
    0x3f, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xfe, 0x3f, 0xff,
    0xff, 0xc0, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xc0,
    0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0
  };
  
  
  // 'tcpconn1Inv', 50x50px
  const unsigned char tcpConn1Inv [] PROGMEM = {
    0x00, 0x3f, 0xff, 0xff, 0xff, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x07, 0xff,
    0xff, 0xff, 0xff, 0xf8, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x1f, 0x80, 0x00, 0x00,
    0x00, 0x7e, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x0f,
    0x00, 0x78, 0x07, 0xff, 0xff, 0xf8, 0x07, 0x80, 0x78, 0x0f, 0xff, 0xff, 0xfe, 0x07, 0x80, 0x78,
    0x0f, 0xff, 0xff, 0xfe, 0x07, 0x80, 0x70, 0x1f, 0xff, 0xff, 0xfe, 0x03, 0x80, 0x70, 0x1f, 0xff,
    0xff, 0xfe, 0x03, 0x80, 0x70, 0x1c, 0xc9, 0x32, 0x46, 0x03, 0x80, 0x70, 0x1c, 0xc9, 0x32, 0x46,
    0x03, 0x80, 0x70, 0x1c, 0xc9, 0x32, 0x46, 0x03, 0x80, 0x70, 0x1c, 0xc9, 0x32, 0x46, 0x03, 0x80,
    0x70, 0x1c, 0xc9, 0x32, 0x46, 0x03, 0x80, 0x70, 0x1c, 0xd9, 0xb2, 0x66, 0x03, 0x80, 0x70, 0x1f,
    0xff, 0xff, 0xfe, 0x03, 0x80, 0x70, 0x1f, 0xff, 0xff, 0xfe, 0x03, 0x80, 0x70, 0x1f, 0xff, 0xff,
    0xfe, 0x03, 0x80, 0x70, 0x1f, 0xff, 0xff, 0xfe, 0x03, 0x80, 0x70, 0x1f, 0xff, 0xff, 0xfe, 0x03,
    0x80, 0x70, 0x1f, 0xff, 0xff, 0xfe, 0x03, 0x80, 0x70, 0x1f, 0xff, 0xff, 0xfe, 0x03, 0x80, 0x70,
    0x1f, 0xff, 0xff, 0xfe, 0x03, 0x80, 0x70, 0x1f, 0xff, 0xff, 0xfe, 0x03, 0x80, 0x70, 0x1f, 0xff,
    0xff, 0xfe, 0x03, 0x80, 0x70, 0x1f, 0xff, 0xff, 0xfe, 0x03, 0x80, 0x70, 0x1f, 0xff, 0xff, 0xfe,
    0x03, 0x80, 0x70, 0x1f, 0xff, 0xff, 0xfe, 0x03, 0x80, 0x70, 0x00, 0xff, 0xff, 0xc0, 0x03, 0x80,
    0x70, 0x00, 0xff, 0xff, 0xc0, 0x03, 0x80, 0x70, 0x00, 0xff, 0xff, 0xc0, 0x03, 0x80, 0x70, 0x00,
    0xff, 0xff, 0xc0, 0x03, 0x80, 0x70, 0x00, 0xff, 0xff, 0xc0, 0x03, 0x80, 0x70, 0x00, 0x3f, 0xff,
    0x00, 0x03, 0x80, 0x70, 0x00, 0x1f, 0xff, 0x00, 0x03, 0x80, 0x70, 0x00, 0x1f, 0xff, 0x00, 0x03,
    0x80, 0x70, 0x00, 0x1f, 0xff, 0x00, 0x03, 0x80, 0x78, 0x00, 0x1f, 0xff, 0x00, 0x07, 0x80, 0x78,
    0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x38, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x3c, 0x00, 0x00,
    0x00, 0x00, 0x0f, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00,
    0x7e, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00,
    0x01, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  };
  // 'AntennaSending1Inv', 50x50px
  const unsigned char antennaSending1Inv [] PROGMEM = {
    0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x01,
    0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x1f, 0xe0, 0x01,
    0xfc, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x7c, 0x03, 0xf0, 0x1f, 0x80,
    0x00, 0x00, 0xf0, 0x3f, 0xfe, 0x07, 0xc0, 0x00, 0x01, 0xe0, 0xff, 0xff, 0x83, 0xe0, 0x00, 0x03,
    0xc3, 0xfe, 0x3f, 0xe1, 0xe0, 0x00, 0x07, 0x87, 0xe0, 0x03, 0xf0, 0xf0, 0x00, 0x0f, 0x0f, 0x80,
    0x00, 0xf8, 0x78, 0x00, 0x0e, 0x1e, 0x03, 0xe0, 0x3c, 0x38, 0x00, 0x1e, 0x3c, 0x1f, 0xfc, 0x1e,
    0x3c, 0x00, 0x1c, 0x78, 0x3f, 0xff, 0x0f, 0x1c, 0x00, 0x3c, 0x78, 0x7e, 0x3f, 0x87, 0x1e, 0x00,
    0x38, 0xf0, 0xf0, 0x07, 0xc7, 0x8e, 0x00, 0x38, 0xe1, 0xe0, 0x03, 0xe3, 0x8f, 0x00, 0x78, 0xe3,
    0xc0, 0x01, 0xe3, 0xc7, 0x00, 0x71, 0xe3, 0x80, 0x00, 0xf1, 0xc7, 0x00, 0x71, 0xc7, 0x83, 0xe0,
    0x71, 0xc7, 0x00, 0x71, 0xc7, 0x07, 0xf0, 0x71, 0xc7, 0x00, 0x71, 0xc7, 0x07, 0xf8, 0x71, 0xe7,
    0x80, 0x71, 0xc7, 0x07, 0xf8, 0x71, 0xe7, 0x80, 0x71, 0xc7, 0x07, 0xf8, 0x71, 0xe7, 0x80, 0x71,
    0xc7, 0x07, 0xf0, 0x71, 0xe7, 0x80, 0x71, 0xc7, 0x03, 0xf0, 0x71, 0xc7, 0x80, 0x71, 0xc7, 0x81,
    0xc0, 0x71, 0xc7, 0x00, 0x71, 0xc3, 0x81, 0xc0, 0xf1, 0xc7, 0x00, 0x71, 0xe3, 0xc1, 0xc1, 0xe3,
    0xc7, 0x00, 0x78, 0xe1, 0xe1, 0xc1, 0xc3, 0x8f, 0x00, 0x38, 0xf0, 0xe1, 0xc0, 0xc7, 0x8e, 0x00,
    0x38, 0x70, 0x01, 0xc0, 0x07, 0x0e, 0x00, 0x3c, 0x78, 0x01, 0xc0, 0x0f, 0x1e, 0x00, 0x1c, 0x3c,
    0x01, 0xc0, 0x0e, 0x1c, 0x00, 0x1e, 0x1e, 0x01, 0xc0, 0x04, 0x3c, 0x00, 0x0f, 0x0c, 0x01, 0xc0,
    0x00, 0x78, 0x00, 0x07, 0x80, 0x01, 0xc0, 0x00, 0x78, 0x00, 0x07, 0x80, 0x01, 0xc0, 0x00, 0xf0,
    0x00, 0x03, 0xc0, 0x01, 0xc0, 0x00, 0x20, 0x00, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  };

static const unsigned char image_Lock_7x8_bits[]           PROGMEM = {0x1c,0x22,0x22,0x7f,0x7f,0x77,0x7f,0x3e}; //8
static const unsigned char image_Bluetooth_Idle_5x8_bits[] PROGMEM = {0x04,0x0d,0x16,0x0c,0x0c,0x16,0x0d,0x04}; //8
static const unsigned char image_Volup_8x6_bits[]          PROGMEM = {0x48,0x8c,0xaf,0xaf,0x8c,0x48}; //6
static const unsigned char image_Alert_9x8_bits[]          PROGMEM = {0x10,0x00,0x38,0x00,0x28,0x00,0x6c,0x00,0x6c,0x00,0xfe,0x00,0xee,0x00,0xff,0x01}; //16
