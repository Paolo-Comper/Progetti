namespace gui {

std::string main_menu = R"(
┌───────────────────────────────────────┐     _____          _____        
│                                       │    |  __ \        |  __ \       
│   [1] Preference                      │    | |__) | __ ___| |__) |   _  
│                                       │    |  ___/ '__/ _ \  ___/ | | | 
│   [2] Settings                        │    | |   | | |  __/ |   | |_| | 
│                                       │    |_|   |_|  \___|_|    \__, | 
│   [3] Security                        │                      __ _ __/ | 
│                                       │                     / _(_)___/  
│   [4] Logging & debug                 │      ___ ___  _ __ | |_ _  __ _ 
│                                       │     / __/ _ \| '_ \|  _| |/ _` |
│   [5] Ottimizations                   │    | (_| (_) | | | | | | | (_| |
│                                       │     \___\___/|_| |_|_| |_|\__, |
│   [6] Exit                            │                            __/ |
│                                       │                           |___/ 
└───────────────────────────────────────┘    
)";

std::string preference_menu = R"(
┌───────────────────────────────────────┐     _____          _____        
│                                       │    |  __ \        |  __ \       
│                                       │    | |__) | __ ___| |__) |   _  
│                                       │    |  ___/ '__/ _ \  ___/ | | | 
│   [1] Default output path             │    | |   | | |  __/ |   | |_| | 
│                                       │    |_|   |_|  \___|_|    \__, | 
│   [2] Temp file auto delete           │                      __ _ __/ | 
│                                       │                     / _(_)___/  
│   [3] Encoding                        │      ___ ___  _ __ | |_ _  __ _ 
│                                       │     / __/ _ \| '_ \|  _| |/ _` |
│   [4] Exit                            │    | (_| (_) | | | | | | | (_| |
│                                       │     \___\___/|_| |_|_| |_|\__, |
│                                       │                            __/ |
│                                       │                           |___/ 
└───────────────────────────────────────┘    
)";

std::string settings_menu = R"(
┌───────────────────────────────────────┐     _____          _____        
│                                       │    |  __ \        |  __ \       
│                                       │    | |__) | __ ___| |__) |   _  
│                                       │    |  ___/ '__/ _ \  ___/ | | | 
│   [1] Enable multy-threading          │    | |   | | |  __/ |   | |_| | 
│                                       │    |_|   |_|  \___|_|    \__, | 
│   [2] Max thred                       │                      __ _ __/ | 
│                                       │                     / _(_)___/  
│   [3] Timeout                         │      ___ ___  _ __ | |_ _  __ _ 
│                                       │     / __/ _ \| '_ \|  _| |/ _` |
│   [4] Exit                            │    | (_| (_) | | | | | | | (_| |
│                                       │     \___\___/|_| |_|_| |_|\__, |
│                                       │                            __/ |
│                                       │                           |___/ 
└───────────────────────────────────────┘    
)";

std::string security_menu = R"(
┌───────────────────────────────────────┐     _____          _____        
│                                       │    |  __ \        |  __ \       
│                                       │    | |__) | __ ___| |__) |   _  
│                                       │    |  ___/ '__/ _ \  ___/ | | | 
│   [1] Ask for confirm                 │    | |   | | |  __/ |   | |_| | 
│                                       │    |_|   |_|  \___|_|    \__, | 
│   [2] Limit RAM usage                 │                      __ _ __/ | 
│                                       │                     / _(_)___/  
│   [3] Limit CPU usage                 │      ___ ___  _ __ | |_ _  __ _ 
│                                       │     / __/ _ \| '_ \|  _| |/ _` |
│   [4] Exit                            │    | (_| (_) | | | | | | | (_| |
│                                       │     \___\___/|_| |_|_| |_|\__, |
│                                       │                            __/ |
│                                       │                           |___/ 
└───────────────────────────────────────┘    
)";

std::string logging_menu = R"(
┌───────────────────────────────────────┐     _____          _____        
│                                       │    |  __ \        |  __ \       
│                                       │    | |__) | __ ___| |__) |   _  
│                                       │    |  ___/ '__/ _ \  ___/ | | | 
│                                       │    | |   | | |  __/ |   | |_| | 
│   [1] Logging level                   │    |_|   |_|  \___|_|    \__, | 
│                                       │                      __ _ __/ | 
│   [2] Log to file                     │                     / _(_)___/  
│                                       │      ___ ___  _ __ | |_ _  __ _ 
│   [3] Exit                            │     / __/ _ \| '_ \|  _| |/ _` |
│                                       │    | (_| (_) | | | | | | | (_| |
│                                       │     \___\___/|_| |_|_| |_|\__, |
│                                       │                            __/ |
│                                       │                           |___/ 
└───────────────────────────────────────┘    
)";

std::string ottimizzations_menu = R"(
┌───────────────────────────────────────┐     _____          _____        
│                                       │    |  __ \        |  __ \       
│                                       │    | |__) | __ ___| |__) |   _  
│                                       │    |  ___/ '__/ _ \  ___/ | | | 
│                                       │    | |   | | |  __/ |   | |_| | 
│   [1] Remove comment                  │    |_|   |_|  \___|_|    \__, | 
│                                       │                      __ _ __/ | 
│   [2] Clean sintax                    │                     / _(_)___/  
│                                       │      ___ ___  _ __ | |_ _  __ _ 
│   [3] Exit                            │     / __/ _ \| '_ \|  _| |/ _` |
│                                       │    | (_| (_) | | | | | | | (_| |
│                                       │     \___\___/|_| |_|_| |_|\__, |
│                                       │                            __/ |
│                                       │                           |___/ 
└───────────────────────────────────────┘    
)";
}